---
apiVersion: v1
kind: ConfigMap
metadata:
  name: bgg-cm
data:
  BGG_DB_USER: root
  BGG_DB_HOST: mydb-svc.myns.svc.cluster.local

---
apiVersion: v1
kind: Secret
metadata:
  name: bgg-secret
type: Opaque
data:
  BGG_DB_PASSWORD: Y2hhbmdlaXQ=

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bggapp-deploy
  labels:
    name: bggapp-deploy
spec:
  replicas: 3
  # rolling update
  minReadySeconds: 5 # Number of seconds for Kubernetes to wait for the application to be ready
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      name: bggapp-po
  template:
    metadata:
      name: bggapp-po
      labels:
        name: bggapp-po
    spec:
      containers: # https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#container-v1-core
        - name: bggapp-container
          image: stackupiss/bgg-backend:v2
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: bgg-cm
            - secretRef:
                name: bgg-secret
          ports:
            - containerPort: 3000
              protocol: TCP
          livenessProbe: # https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#probe-v1-core
            httpGet:
              path: /healthz
              port: 3000
---
apiVersion: v1
kind: Service
metadata:
  name: bggapp-svc
spec:
  type: LoadBalancer
  selector:
    name: bggapp-po
  ports:
    - port: 3000 # service port
      targetPort: 3000 # pod port = container port
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: app-ing
  labels:
    name: app-ing
spec:
  ingressClassName: nginx
  rules:
    - host: app-146.190.202.77.nip.io
      http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: bggapp-svc
              port:
                number: 3000